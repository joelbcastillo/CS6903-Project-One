
[tool.poetry]
name = "castillo_chan_zhou_decrypt_binary"
version = "1.0.0"
description = "CS6903 (Spring 2021) - Project One - Cryptanalysis of a Class of Ciphers"
authors = ["Joel Castillo <joel.castillo@nyu.edu>", "Gary Zhou <gz"]

readme = "README.md"
homepage = "https://github.com/joelbcastillo/castillo-chan-zhou-decrypt-binary"
repository = "https://github.com/joelbcastillo/castillo-chan-zhou-decrypt-binary"
documentation = "https://github.com/joelbcastillo/castillo-chan-zhou-decrypt-binary/docs"
keywords = ["castillo_chan_zhou_decrypt_binary"]
classifiers=[
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    
    "License :: OSI Approved :: MIT License",
    
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/joelbcastillo/castillo-chan-zhou-decrypt-binary/issues"

[tool.poetry.scripts]
castillo-chan-zhou-decrypt-binary = 'castillo_chan_zhou_decrypt_binary.cli:cli'

[tool.poetry.dependencies]
python = "<3.10,>=3.6.1"
click = "^7.1.2"

[tool.poetry.dev-dependencies]
pre-commit = "^2.16.0"
invoke = "^1.5.0"
flake8 = "^3.8.4"
flakehell = "^0.9.0"
flake8-builtins = "^1.5.3"
flake8-blind-except = "^0.2.0"
flake8-logging-format = "^0.6.0"
flake8-bugbear = "^20.11.1"
flake8-annotations = "^2.5.0"
flake8-docstrings = "^1.5.0"
flake8-bandit = "^2.1.2"
darglint = "^1.5.8"
isort = "^5.7.0"
black = "^20.8b1"
safety = "^1.10.3"
mypy = "^0.790"
sphinx = "^3.4.3"
recommonmark = "^0.7.1"
bump2version = "^1.0.1"
pytest = "^6.2.1"
xdoctest = "^0.15.2"
coverage = {version = "^5.3", extras = ["toml"]}
pytest-cov = "^2.10.1"
watchdog = {version = "^1.0.2", extras = ["watchmedo"]}
pylint = "^2.7.2"

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["castillo_chan_zhou_decrypt_binary"]

[tool.coverage.report]
fail_under = 50
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug",
  "if settings.DEBUG:",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == __main__:"
]
show_missing = true

[tool.coverage.html]
directory = "htmlcov"

[tool.flakehell]
format = "grouped"
max_line_length = 99
show_source = true
docstring-convention = "google"

[tool.flakehell.plugins]
pyflakes = ["+*", "-S311", "-E501", "-W503", "-E203"]
pycodestyle = ["+*", "-S311", "-E501", "-W503", "-E203"]
mccabe = ["+*"]
"flake8-*" = ["+*", "-S311", "-E501", "-W503", "-E203"]
flake8-bandit = ["+*", "-S311", "-E501", "-W503", "-E203"]
darglint = ["+*"]
pylint = ["-*", "-E501", "-W503", "-E203"]

[tool.flakehell.exceptions."tests/"]
flake8-bandit = ["-S101"]

[tool.flakehell.exceptions."src/castillo_chan_zhou_decrypt_binary/"]
flake8-docstrings = ["-D400", "-D205"]

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 99
known_third_party = ["invoke", "nox"]

[tool.black]
line-length = 99
target-version = ["py36"]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
